/*
 * Created by kevo on 5/11/2016.
 */

                                ~~~~~~~~~~~~~~~
                                     NOTEz
                                ~~~~~~~~~~~~~~~

5/13
----
* Noticed I had complete admin control on mySQL workbench. very cool.




                                ~~~~~~~~~~~~~~~
                                  mySQL SCHEMA
                                ~~~~~~~~~~~~~~~

mySQL SCHEMA FOR USER ACCOUNTS
------------------------------
* Have the mySQL query monitor on my server showing the query log live to the class in a snap window

FIELDS
-------

USER TABLE
----------
USER TABLE ON CREATION
----------------------
* userId - (PRIMARY KEY)
* userName - (UNIQUE)
* emailAddr (UNIQUE, PRIMARY, AUTO INC)
* password - hashed * salted (mmmm)

PROFILE FOR POST CREATION
-------------------------
* Registration Date
* postCount - this is incremented in the logic controller when someone POSTS a... new post or thread
* avatar
* session - the RCB session you are in
* realName
* location
* favLang

FORUM TABLES
------------
THREAD TABLE
------------

POST TABLE
----------

HELP ROOM TABLES
----------------
GIVE HELP
---------

GET HELP
--------

PROJECT TABLE
-------------

                                ~~~~~~~~~~~~~~~
                                   SEQUELIZE
                                ~~~~~~~~~~~~~~~

const Sequelize = require("sequelize"); // mySQL node.js ORM
const db = new Sequelize("mysql://username:pass@host:port/dbname");


const User = db.define('user', { // create new table in the DB
	firstName: {
		type: db.STRING,
		field: 'first_name' // will result in an attribute that is firstName when user facing but first_name in the database
	},
	lastName: {
		type: db.STRING,
		field: 'last_name'
	}
}, {
	freezeTableName: true // model tableName will be the same as the model name
});

User.sync({force: true}).then(function () {
	// table created
	return User.create({
		firstName: 'test',
		lastName: 'noobertron5000'
	});
});

module.exports = User;